#!/usr/bin/env php
<?php

$user = getenv('GH_USER');
$access_token = getenv('GH_API_TOKEN');
$ssh_key = getenv('GH_SSH_KEY');
$password = getenv('GH_SSH_PASSWORD');
$defaultRoot = "/Volumes/Cloud/GitHub"; // getcwd()

$bash = "ssh-agent bash -c 'ssh-add \"$ssh_key\"; ";

$root = (empty($argv[1]) ? $defaultRoot : $argv[1]);

if (!file_exists($root)) {
	if (file_exists(realpath($defaultRoot . '/' . $root))) {
		$root = realpath($defaultRoot . '/' . $root);
	} else {
		printf("\033[0;31mRoot directory could not be determined\033[0m\n");
		exit;
	}
}

/* start at page 1 and work through results until we hit the last page */
$page = 1;
do {
	/* configure a curl instance to get the next page of results */
	$ch = curl_init();
	curl_setopt($ch, CURLOPT_URL, "https://api.github.com/user/repos?page=$page");
	curl_setopt($ch, CURLOPT_USERAGENT, 'sync-github-repos');
	curl_setopt($ch, CURLOPT_HTTPHEADER, ["Authorization: token $access_token"]);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	$json = curl_exec($ch);
	curl_close($ch);

	/* walk through the list of repos and sync them locally */
	foreach($repos = json_decode($json, true) as $repo) {
		
		/* have we already cloned this repo? */
		$owner = "$root/{$repo['owner']['login']}";
		$path = "{$owner}/{$repo['name']}";
		if (!file_exists($path)) {
			$bash .= "echo \"\033[1;32m\"; ";
			if (!file_exists($owner)) {
				$bash .= "mkdir \"$owner\"; ";
			}

			/* if not, let's clone it now */
			$bash .= "echo \"Cloning {$repo['owner']['login']}/{$repo['name']}\"; cd \"$owner\"; echo \"\033[5;32m\"; git clone {$repo['ssh_url']}; echo \"\033[0m\"";
		} else {
			/* if it _is_ cloned, let's track all remote branches and pull changes */
			$bash .= "echo \"Pulling {$repo['owner']['login']}/{$repo['name']}\"; cd \"$path\"; echo \"\033[2;30m\"; git pull --all; echo \"\033[0m\"; ";
		}
	}
	$page++;
} while (count($repos) > 0);
$bash .= "' 2>&1";

$output = [];
exec($bash, $output);
echo implode (PHP_EOL, $output) . PHP_EOL;